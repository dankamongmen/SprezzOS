<!-- retain these comments for translator revision tracking -->
<!-- $Id$ -->

   <sect3 arch="x86">
   <title>Partitioning the USB stick</title>
<para>

We will show how to set up the memory stick to use the first partition,
instead of the entire device.

</para><note><para>

Since most USB sticks come pre-configured with a single FAT16
partition, you probably won't have to repartition or reformat the
stick.  If you have to do that anyway, use <command>cfdisk</command>
or any other partitioning tool to create a FAT16 partition<footnote>

<para>
Don't forget to set the <quote>bootable</quote> bootable flag.
</para>

</footnote>, and then create the filesystem using:

<informalexample><screen>
# mkdosfs /dev/<replaceable>sdX1</replaceable>
</screen></informalexample>

Take care that you use the correct device name for your USB stick. The
<command>mkdosfs</command> command is contained in the
<classname>dosfstools</classname> &debian; package.

</para></note><para>

In order to start the kernel after booting from the USB stick, we will
put a boot loader on the stick. Although any boot loader
(e.g. <classname>lilo</classname>) should work, it's convenient to use
<classname>syslinux</classname>, since it uses a FAT16 partition and can
be reconfigured by just editing a text file. Any operating system
which supports the FAT file system can be used to make changes to the
configuration of the boot loader.

</para><para>

To put <classname>syslinux</classname> on the FAT16 partition on your USB
stick, install the <classname>syslinux</classname> and
<classname>mtools</classname> packages on your system, and do:

<informalexample><screen>
# syslinux /dev/<replaceable>sdX1</replaceable>
</screen></informalexample>

Again, take care that you use the correct device name. The partition
must not be mounted when starting <command>syslinux</command>. This
procedure writes a boot sector to the partition and creates the file
<filename>ldlinux.sys</filename> which contains the boot loader code.

</para>
   </sect3>

   <sect3 arch="x86">
   <title>Adding the installer image</title>
<para>

Mount the partition
(<userinput>mount /dev/<replaceable>sdX1</replaceable> /mnt</userinput>)
and copy the following installer image files to the stick:

<itemizedlist>
<listitem><para>

<filename>vmlinuz</filename> or <filename>linux</filename> (kernel binary)

</para></listitem>
<listitem><para>

<filename>initrd.gz</filename> (initial ramdisk image)

</para></listitem>
</itemizedlist>

You can choose between either the regular version or the graphical version
of the installer. The latter can be found in the <filename>gtk</filename>
subdirectory. If you want to rename the files, please note that
<classname>syslinux</classname> can only process DOS (8.3) file names.

</para><para>

Next you should create a <filename>syslinux.cfg</filename> configuration
file, which at a bare minimum should contain the following two lines (change
the name of the kernel binary to <quote><filename>linux</filename></quote>
if you used a <filename>netboot</filename> image):

<informalexample><screen>
default vmlinuz
append initrd=initrd.gz
</screen></informalexample>

For the graphical installer you should add
<userinput>vga=788</userinput> to the second line.

</para><para>

If you used an <filename>hd-media</filename> image, you should now copy the ISO file of a
&debian; ISO image<footnote>

<para>
You can use either a businesscard, a netinst or a full CD image (see
<xref linkend="official-cdrom"/>). Be sure to select one that fits.
Note that the <quote>netboot <filename>mini.iso</filename></quote> image is
not usable for this purpose.
</para>

</footnote> onto the stick. When you are done, unmount the USB memory stick
(<userinput>umount /mnt</userinput>).

</para>
   </sect3>
