<!-- original version: 67272 -->

 <sect1 condition="bootable-usb" id="boot-usb-files">
 <title>Préparation des fichiers pour un amorçage avec une clé USB</title>

<para> 
Pour préparer une clé USB, vous avez besoin d'un système GNU/Linux fonctionnel
qui gère les périphériques USB. Sur les systèmes récents, la clé devrait être
automatiquement reconnue. Si ce n'est pas le cas, vérifiez que le module du noyau
usb-storage est chargé. Une fois insérée, la clé sera associée à un périphérique appelé
<filename>/dev/sdX</filename>, où le <quote>X</quote> est une lettre minuscule (a-z).
Avec la commande <command>dmesg</command>, il est possible de savoir à quel périphérique
la clé a été associée. Pour pouvoir écrire sur la clé, il vous faudra
enlever la protection contre l'écriture.
</para>

<warning><para>
Les procédures décrites dans cette section détruisent ce qui se trouve sur le périphérique.
Faites très attention à utiliser le nom correct pour la clé USB. Si vous vous trompez et
utilisez un autre périphérique, un disque dur par exemple, toutes les données du disque
seront perdues.
</para></warning>

  <sect2 id="usb-copy-isohybrid" condition="isohybrid-supported">
  <title>Préparation d'une clé USB utilisant une image hybride (CD ou DVD)</title>
<para>

Les images de Debian sur CD ou DVD peuvent être transférées directement sur une clé USB.
C'est une méthode très simple pour rendre la clé amorçable.
Il suffit de choisir une image qui tienne sur la clé.
Consultez <xref linkend="official-cdrom"/> pour obtenir cette image.

</para>
<para>

Pour les clés de très petite taille (quelques mégaoctets), 
vous pouvez télécharger l'image <filename>mini.iso</filename>
qui se trouve dans le répertoire <filename>netboot</filename> (son adresse précise
est mentionnée dans  <xref linkend="where-files"/>)<footnote>

<para>
Pour ajouter un microprogramme sur l'image <filename>mini.iso</filename>, vous
devez d'abord transférer l'image sur la clé. Puis vous devez récupérer les
fichiers du microprogramme. Consultez <xref linkend="loading-firmware"/> pour des précisions.
Puis, débranchez la clé et rebranchez-la. Vous devez voir maintenant deux partitions
sur la clé. Montez la deuxième partition et placez-y les fichiers du microprogramme.

<informalexample><screen>
# mount /dev/<replaceable>sdX2</replaceable> /mnt
# cd /mnt
# tar zxvf <replaceable>/path/to/</replaceable>firmware.tar.gz
# cd /
# umount
</screen></informalexample>

</para>

</footnote>.
</para>
<para>

L'image CD ou DVD que vous avez choisie peut être transférée directement sur la clé.
Toutes les données existantes sont détruites.
Par exemple, avec un système GNU/Linux, après avoir vérifié que la clé n'est pas montée,
vous pouvez copier l'image de cette manière :

<informalexample><screen>
<prompt>#</prompt> <userinput>dd if=<replaceable>debian.iso</replaceable> of=/dev/<replaceable>sdX</replaceable></userinput>
<prompt>#</prompt> <userinput>sync</userinput>
</screen></informalexample>
 
</para>
  </sect2>

  <sect2 id="usb-copy-easy">
  <title>Copie des fichiers &mdash; méthode simple</title>

<para>
Vous pouvez aussi préparer votre clé vous-même en copiant les fichiers 
de l'installateur et une image CD.
Notez que la capacité de la clé doit être au moins égale à 256&nbsp;Mo. Pour des
capacités inférieures, voyez <xref linkend="usb-copy-flexible"/>.

</para>

<para>

Le fichier <filename>hd-media/boot.img.gz</filename> contient tous les
fichiers de l'installateur, le noyau et le programme 
<phrase arch="x86"><command>SYSLINUX</command> avec son fichier de configuration.</phrase>
<phrase arch="powerpc"><classname>yaboot</classname> avec son fichier de configuration.</phrase>

</para>

<para>
Bien que pratique, cette méthode possède un inconvénient majeur : la taille logique
du périphérique est limitée à 256 Mo, même si la capacité de la clé est supérieure.
Pour retrouver la taille réelle, il vous faudra repartitionner la clé et créer un nouveau
système de fichiers. Il existe aussi un deuxième inconvénient : vous ne pouvez pas copier
une image de CD complet mais seulement l'image <quote>netinst</quote> ou l'image <quote>businesscard</quote>.

</para>
<para>
Il vous suffit d'extraire cette image sur votre clé USB&nbsp;:

<informalexample><screen>
# zcat boot.img.gz &gt; /dev/<replaceable>sdX</replaceable>
</screen></informalexample>

</para>
<para arch="powerpc">

Créez une partition <quote>Apple_Bootstrap</quote> sur la clé avec la commande 
<userinput>C</userinput> de <command>mac-fdisk</command> et placez l'image
avec&nbsp;:

<informalexample><screen>
# zcat boot.img.gz &gt; /dev/<replaceable>sdX2</replaceable>
</screen></informalexample>
</para>

<para>

Montez ensuite la clé
<phrase arch="x86">(<userinput>mount
/dev/<replaceable>sdX</replaceable> /mnt</userinput>),</phrase>
<phrase arch="powerpc">(<userinput>mount
/dev/<replaceable>sdX2</replaceable> /mnt</userinput>),</phrase>
qui aura maintenant un système de fichiers 
<phrase arch="x86">FAT</phrase>
<phrase arch="powerpc">HFS</phrase>, et copiez une image &debian; de type
<quote>netinst</quote> ou <quote>businesscard</quote>.
Démontez la clé (<userinput>umount /mnt</userinput>)
et voilà, c'est fait&nbsp;!
</para>
</sect2>

  <sect2 id="usb-copy-flexible">
  <title>Copie des fichiers &mdash; méthode détaillée</title>
<para>

Si vous aimez la souplesse d'utilisation ou si vous voulez simplement savoir ce qui se
passe, vous pouvez utiliser la méthode suivante pour placer les fichiers
sur la clé. L'un des avantages de cette méthode est que, si la capacité de la clé est
suffisante, vous pouvez copier l'image d'un disque entier. 
</para>

&usb-setup-x86.xml;
&usb-setup-powerpc.xml;

</sect2>

 </sect1>
