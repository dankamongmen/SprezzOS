<!-- retain these comments for translator revision tracking -->
<!-- original version: 43254 untranslated -->


  <sect2 arch="ia64"><title>Partitioning for &arch-title;</title>
<para>

The <command>partman</command> disk partitioner is the default
partitioning tool for the installer.
It manages the set of partitions and their mount points to ensure
that the disks and filesystems are properly configured for a successful
installation.  It actually uses <command>parted</command> to do the
on-disk partitioning.

</para>

   <note>
   <title>EFI Recognized Formats</title>
<para>

The IA-64 EFI firmware supports two partition table (or disk label)
formats, GPT and MS-DOS.  MS-DOS, the format typically used on i386
PCs, is no longer recommended for IA-64 systems.  Although
the installer also provides <command>cfdisk</command>,
you should only use <ulink url="parted.txt">
<command>parted</command></ulink> because only it can manage both GPT
and MS-DOS tables correctly.

</para></note>

<para>

The automatic partitioning recipes for <command>partman</command>
allocate an EFI partition as the first partition on the disk.
You can also set up the partition under the <guimenuitem>Guided
partitioning</guimenuitem> from the main menu in a manner similar to
setting up a <emphasis>swap</emphasis> partition.

</para><para>

The <command>partman</command> partitioner will handle most disk
layouts.
For those rare cases where it is necessary to manually set up a disk,
you can use the shell as described above and run the
<command>parted</command> utility directly using its command line interface.
Assuming that you want to erase your whole disk and create a GPT table
and some partitions, then something similar to the following command
sequence could be used:

<informalexample><screen>
      mklabel gpt
      mkpartfs primary fat 0 50
      mkpartfs primary linux-swap 51 1000
      mkpartfs primary ext2 1001 3000
      set 1 boot on
      print
      quit
</screen></informalexample>

This creates a new partition table, and three partitions to be used as
an EFI boot partition, swap space, and a root file system.  Finally it
sets the boot flag on the EFI partition.  Partitions are specified in
Megabytes, with start and end offsets from the beginning of the disk.
So, for example, above we created a 1999MB ext2 file system starting
at offset 1001MB from the start of the disk.  Note that formatting swap
space with <command>parted</command> can take a few minutes to
complete, as it scans the partition for bad blocks.

</para>
  </sect2>

  <sect2 arch="ia64"><title>Boot Loader Partition Requirements</title>
<para>

ELILO, the IA-64 boot loader, requires a partition containing a FAT
file system with the <userinput>boot</userinput> flag set.
The partition must be big enough to hold the boot loader and any
kernels or RAMdisks you may wish to boot.  A minimum size would be
about 20MB, but if you expect to run with multiple kernels, then
128MB might be a better size.

</para><para>

The EFI Boot Manager and the EFI Shell fully support the GPT table
so the boot partition does not necessarily have to be the first
partition or even on the same disk.
This is convenient if you should forget to allocate the partition and
only find out after you have formatted the other partitions on your disk(s).
The <command>partman</command> partitioner checks for an EFI partition
at the same time it checks for a properly set up <emphasis>root</emphasis>
partition.
This gives you an opportunity to correct the disk layout before the
package install begins.
The easiest way to correct this omission is to shrink the last partition
of the disk to make enough free space for adding an EFI partition.

</para><para>

It is strongly recommended that you allocate the EFI boot partition
on the same disk as the <emphasis>root</emphasis> filesystem.

</para>
  </sect2>

  <sect2 arch="ia64"><title>EFI Diagnostic Partitions</title>
<para>

The EFI firmware is significantly more sophisticated than the usual
BIOS seen on most x86 PCs.
Some system vendors take advantage of the ability of the EFI to
access files and run programs from a hard disk filesystem to store diagnostics
and EFI based system management utilities on the hard disk.
This is a separate FAT format filesystem on the system disk.
Consult the system documentation and accessories that come with the
system for details.
The easiest time to set up a diagnostics partition is at the same time you
set up the EFI boot partition.

</para>
  </sect2>
