<!-- retain these comments for translator revision tracking -->
<!-- original version: 43573 untranslated -->

  <sect3 arch="ia64">
  <title>Install the <command>ELILO</command> Boot Loader
         on a Hard Disk</title>
<para>

The &architecture; boot loader is called <quote>elilo</quote>.
It is modeled on the <quote>lilo</quote> boot loader for the
x86 architecture and uses a similar configuration file.
However, instead of writing an MBR or partition boot record to
the disk, it copies the necessary files to a separate FAT formatted
disk partition and modifies the <guimenuitem>EFI Boot Manager</guimenuitem>
menu in the firmware to point to the files in the EFI partition.
The <command>elilo</command> boot loader is really in two parts.
The <filename>/usr/sbin/elilo</filename> command manages the partition and
copies files into it.
The <filename>elilo.efi</filename> program is copied into the EFI
partition and then run by the <quote>EFI Boot Manager</quote> to
do the actual work of loading and starting the Linux kernel.

</para><para>

The <quote>elilo</quote> configuration and installation is done as the
last step of installing the packages of the base installation.
&d-i; will present you with a list of potential disk partitions that it
has found suitable for an EFI partition.
Select the partition you set up earlier in the installation, typically
a partition on the same disk that contains your
<emphasis>root</emphasis> filesystem.

</para>

  <warning><title>Choose the correct partition!</title>

<para>

The criteria for selecting a partition is that it is FAT format
filesystem with its <emphasis>boot</emphasis> flag set.
&d-i; may show multiple choices depending on what it finds from scanning
all of the disks of the system including EFI partitions of other system
disks and EFI diagnostic partitions.
Remember, <command>elilo</command> may format the partition during
the installation, erasing any previous contents!

</para></warning>

  </sect3>

  <sect3 arch="ia64">
  <title>EFI Partition Contents</title>

<para>

The EFI partition is a FAT filesystem format partition on one of the
hard disks of the system, usually the same disk that contains the
<emphasis>root</emphasis> filesystem.
It is normally not mounted on a running system as it is only needed
by the <quote>EFI Boot Manager</quote> to load the system and the
installer part of the <command>elilo</command> writes to the filesystem
directly.
The <command>/usr/sbin/elilo</command> utility writes the following files
into the <filename>efi/debian</filename> directory of the EFI
partition during the installation.
Note that the <quote>EFI Boot Manager</quote> would find these files
using the path <filename>fs<replaceable>n</replaceable>:\efi\debian</filename>.
There may be other files in this filesystem as well over time as
the system is updated or re-configured.

</para>

<variablelist>

<varlistentry>
<term><filename>elilo.conf</filename></term>
<listitem><para>

This is the configuration file read by the boot loader when it starts.
It is a copy of the <filename>/etc/elilo.conf</filename> with
the filenames re-written to refer to files in the EFI partition.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>elilo.efi</filename></term>
<listitem><para>

This is the boot loader program that the <quote>EFI Boot Manager</quote>
runs to boot the system.
It is the program behind the <guimenuitem>&debian; GNU/Linux</guimenuitem>
menu item of the <quote>EFI Boot Manager</quote> command menu.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>initrd.img</filename></term>
<listitem><para>

This is the initial root filesystem used to boot the kernel.
It is a copy of the file referenced in the
<filename>/etc/elilo.conf</filename>.
In a standard &debian; installation it would be the file in
<filename>/boot</filename> pointed to by the symbolic link
<filename>/initrd.img</filename>.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>readme.txt</filename></term>
<listitem><para>

This is a small text file warning you that the contents of the
directory are managed by the <command>elilo</command> and that
any local changes would be lost at the next time
<filename>/usr/sbin/elilo</filename> is run.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>vmlinuz</filename></term>
<listitem><para>

This is the compressed kernel itself.
It is a copy of the file referenced in the
<filename>/etc/elilo.conf</filename>.
In a standard &debian; installation it would be the file in
<filename>/boot</filename> pointed to by the symbolic link
<filename>/vmlinuz</filename>.

</para></listitem></varlistentry>

</variablelist>

  </sect3>
